openapi: 3.0.1
info:
  title: Livepeer API
  version: 0.0.1-alpha.0

tags:
  - name: stream
    description: Wowza Stream Endpoints
  - name: object-store
    description: Object Stores Endpoints
  - name: user
    description: Api Token Endpoints
  - name: api-token
    description: User Endpoints
  - name: login
    description: User login
  - name: verification
    description: User Email Verification
  - name: password-reset
    description: User Password Reset
  - name: make-admin
    description: Changes user admin status

components:
  schemas:
    stream:
      type: object
      required:
        - name
      additionalProperties: false
      properties:
        id:
          type: string
          readOnly: true
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
        kind:
          type: string
          readOnly: true
          example: stream
        name:
          type: string
          example: test_stream
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
        lastSeen:
          type: number
          example: 1587667174725
        sourceSegments:
          type: number
          example: 1
        transcodedSegments:
          type: number
          example: 2
        deleted:
          type: boolean
          description: Set to true when stream deleted
        createdByTokenName:
          type: string
          readOnly: true
          description: Name of the token used to create this object
        createdAt:
          type: number
          readOnly: true
          description: Timestamp (in milliseconds) at which stream object was created
          example: 1587667174725
        parentId:
          type: string
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
          description: Points to parent stream object
          index: true
        streamKey:
          type: string
          example: hgebdhhigq
          description: Used to form RTMP ingest URL
          unique: true
        playbackId:
          type: string
          example: eaw4nk06ts2d0mzb
          description: Used to form playback URL
          unique: true
        profiles:
          type: array
          items:
            type: object
            required:
              - width
              - name
              - height
              - bitrate
              - fps
            additionalProperties: false
            properties:
              width:
                type: integer
                minimum: 128
              name:
                type: string
                minLength: 1
                maxLength: 500
                example: aac
              height:
                type: integer
                minimum: 128
              bitrate:
                type: integer
                minimum: 400
              fps:
                type: integer
                minimum: 1
        objectStoreId:
          type: string
          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65
        presets:
          type: array
          items:
            type: string
            enum:
              - P720p60fps16x9
              - P720p30fps16x9
              - P720p30fps4x3
              - P576p30fps16x9
              - P360p30fps16x9
              - P360p30fps4x3
              - P240p30fps16x9
              - P240p30fps4x3
              - P144p30fps16x9
            example: P720p60fps16x9
        wowza:
          type: object
          required:
            - transcoderAppConfig
            - transcoderTemplateAppConfig
            - streamNameGroups
            - sourceInfo
          additionalProperties: false
          properties:
            transcoderAppConfig:
              type: object
            transcoderTemplateAppConfig:
              type: object
            streamNameGroups:
              type: array
            sourceInfo:
              type: object
              required:
                - width
                - height
                - fps
              additionalProperties: false
              properties:
                width:
                  type: integer
                  minValue: 1
                height:
                  type: integer
                  minValue: 1
                fps:
                  type: integer
                  minVallue: 1
        renditions:
          type: object
          additionalProperties:
            type: string

    error:
      required:
        - errors
      type: object
      properties:
        errors:
          type: array
          minItems: 1
          items:
            type: string
            example: ['id not provided', 'user not found']

    object-store:
      type: object
      required:
        - type
        - path
        - credentials
      additionalProperties: false
      properties:
        type:
          type: string
          description: type of object store used, such as 'aws'
          example: aws
        path:
          type: string
          description: formatted as 'region/bucket'
          example: eu-central-1/testbucket
        credentials:
          type: string
          description: formatted as 'accesskeyid/accesskey'
          example: AKIAIOSFODNN7EXAMPLE/bPxRfiCYEXAMPLEKEY
          writeOnly: true
        id:
          type: string
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true

    api-token:
      type: object
      additionalProperties: false
      properties:
        kind:
          type: string
          readOnly: true
          example: user
        id:
          type: string
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
        name:
          type: string
          example: Example Token
        lastSeen:
          type: number
          example: 1587667174725

    user-verification:
      type: object
      required:
        - email
        - emailValidToken
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
          unique: true
          index: true
        emailValidToken:
          type: string
          example: E1F53135E559C253
          writeOnly: true

    password-reset-token:
      type: object
      required:
        - email
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
          index: true
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true

    make-admin:
      type: object
      required:
        - email
        - admin
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
        admin:
          type: boolean
          example: true

    password-reset:
      type: object
      required:
        - email
        - resetToken
        - password
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
          index: true
        resetToken:
          type: string
          example: E1F53135E559C253
          writeOnly: true
        password:
          type: string
          example: thisisapassword
          minLength: 64
          maxLength: 64
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true

    user:
      type: object
      required:
        - email
        - password
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
          unique: true
          index: true
        password:
          type: string
          example: thisisapassword
          minLength: 64
          maxLength: 64
          writeOnly: true
        emailValidToken:
          type: string
          example: E1F53135E559C253
          writeOnly: true
        emailValid:
          type: boolean
          example: true
        salt:
          type: string
          example: E1F53135E559C253
          writeOnly: true
        admin:
            type: boolean
            example: true
        kind:
          type: string
          readOnly: true
          example: user
        id:
          type: string
          readOnly: true
          example: abc123

paths:
  /stream:
    tags:
      - stream
    post:
      description: Receives Wowza stream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/stream'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stream'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      description: Lists streams
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stream'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /object-store:
    tags:
      - object-store
    post:
      description: Receives store credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/object-store'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/object-store'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      description: Lists object store credentials by userId
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/object-store'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /user-verification:
    tags:
      - verification
    post:
      description: Verifies user email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/user-verification'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user-verification'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /password-reset-token:
    tags:
      - password-reset
    post:
      description: Creates a password reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/password-reset-token'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/password-reset'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /password-reset:
    tags:
      - password-reset
    post:
      description: Verifies password reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/password-reset'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /make-admin:
    tags:
      - make-admin
    post:
      description: Changes user admin status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/make-admin'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /user/token:
    tags:
      - login
    post:
      description: Receives user login information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/user'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /user:
    tags:
      - user
    post:
      description: Receives user information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/user'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      description: Lists users
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /api-token:
    tags:
      - api-token
    post:
      description: Contains api token information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/api-token'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api-token'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      description: Lists api tokens
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api-token'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-token'
