openapi: 3.0.1
info:
  title: Livepeer API
  version: 0.0.1-alpha.0

tags:
  - name: stream
    description: Wowza Stream Endpoints
  - name: objectstores
    description: Object Stores Endpoints
  - name: user
    description: User Endpoints
  - name: login
    description: User login

components:
  schemas:
    stream:
      type: object
      required:
        - id
        - kind
        - name
      additionalProperties: false
      properties:
        id:
          type: string
          readOnly: true
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
        kind:
          type: string
          readOnly: true
          example: stream
        name:
          type: string
          example: test_stream
        profiles:
          type: array
          items:
            type: object
            required:
              - width
              - name
              - height
              - bitrate
              - fps
            additionalProperties: false
            properties:
              width:
                type: integer
                minimum: 128
              name:
                type: string
                minLength: 1
                maxLength: 500
                example: aac
              height:
                type: integer
                minimum: 128
              bitrate:
                type: integer
                minimum: 400
              fps:
                type: integer
                minimum: 1
        objectStoreId:
          type: string
          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65
        presets:
          type: array
          items:
            type: string
            enum:
              - P720p60fps16x9
              - P720p30fps16x9
              - P720p30fps4x3
              - P576p30fps16x9
              - P360p30fps16x9
              - P360p30fps4x3
              - P240p30fps16x9
              - P240p30fps4x3
              - P144p30fps16x9
            example: P720p60fps16x9
        wowza:
          type: object
          required:
            - transcoderAppConfig
            - transcoderTemplateAppConfig
            - streamNameGroups
            - sourceInfo
          additionalProperties: false
          properties:
            transcoderAppConfig:
              type: object
            transcoderTemplateAppConfig:
              type: object
            streamNameGroups:
              type: array
            sourceInfo:
              type: object
              required:
                - width
                - height
                - fps
              additionalProperties: false
              properties:
                width:
                  type: integer
                  minValue: 1
                height:
                  type: integer
                  minValue: 1
                fps:
                  type: integer
                  minVallue: 1
        renditions:
          type: object
          additionalProperties:
            type: string

    error:
      required:
        - errors
      type: object
      properties:
        errors:
          type: array
          minItems: 1
          items:
            type: string
            example: ['id not provided', 'user not found']

    objectstores:
      type: object
      required:
        - type
        - path
        - credentials
      additionalProperties: false
      properties:
        type:
          type: string
          description: type of object store used, such as 'aws'
          example: aws
        path:
          type: string
          description: formatted as 'region/bucket'
          example: eu-central-1/testbucket
        credentials:
          type: string
          description: formatted as 'accesskeyid/accesskey'
          example: AKIAIOSFODNN7EXAMPLE/bPxRfiCYEXAMPLEKEY
        id:
          type: string
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true

    user:
      type: object
      required:
        - email
        - password
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
          unique: true
          index: true
        password:
          type: string
          example: thisisapassword
        kind:
          type: string
          readOnly: true
          example: user

paths:
  /stream:
    tags:
      - stream
    post:
      description: Receives Wowza stream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/stream'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stream'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      description: Lists streams
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stream'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /objectstores:
    tags:
      - objectstores
    post:
      description: Receives store credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/objectstores'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/objectstores'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      description: Lists object store credentials by userId
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/objectstores'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /user/token:
    tags:
      - login
    post:
      description: Receives user login information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/user'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /user:
    tags:
      - user
    post:
      description: Receives user information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/user'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      description: Lists users
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
