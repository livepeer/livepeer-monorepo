{"ast":null,"code":"\"use strict\";\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getRouteMatcher(routeRegex) {\n  var re = routeRegex.re,\n      groups = routeRegex.groups;\n  return function (pathname) {\n    var routeMatch = re.exec(pathname);\n\n    if (!routeMatch) {\n      return false;\n    }\n\n    var params = {};\n\n    _Object$keys(groups).forEach(function (slugName) {\n      var m = routeMatch[groups[slugName]];\n\n      if (m !== undefined) {\n        params[slugName] = decodeURIComponent(m);\n      }\n    });\n\n    return params;\n  };\n}\n\nexports.getRouteMatcher = getRouteMatcher;","map":{"version":3,"sources":["/Users/adamsoffer/Workspace/livepeerjs/node_modules/next-server/dist/lib/router/utils/route-matcher.js"],"names":["exports","value","getRouteMatcher","routeRegex","re","groups","pathname","routeMatch","exec","params","forEach","slugName","m","undefined","decodeURIComponent"],"mappings":"AAAA;;;;;;AACA,uBAAsBA,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,eAAT,CAAyBC,UAAzB,EAAqC;AAAA,MACzBC,EADyB,GACVD,UADU,CACzBC,EADyB;AAAA,MACrBC,MADqB,GACVF,UADU,CACrBE,MADqB;AAEjC,SAAO,UAACC,QAAD,EAAc;AACjB,QAAMC,UAAU,GAAGH,EAAE,CAACI,IAAH,CAAQF,QAAR,CAAnB;;AACA,QAAI,CAACC,UAAL,EAAiB;AACb,aAAO,KAAP;AACH;;AACD,QAAME,MAAM,GAAG,EAAf;;AACA,iBAAYJ,MAAZ,EAAoBK,OAApB,CAA4B,UAACC,QAAD,EAAc;AACtC,UAAMC,CAAC,GAAGL,UAAU,CAACF,MAAM,CAACM,QAAD,CAAP,CAApB;;AACA,UAAIC,CAAC,KAAKC,SAAV,EAAqB;AACjBJ,QAAAA,MAAM,CAACE,QAAD,CAAN,GAAmBG,kBAAkB,CAACF,CAAD,CAArC;AACH;AACJ,KALD;;AAMA,WAAOH,MAAP;AACH,GAbD;AAcH;;AACDT,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getRouteMatcher(routeRegex) {\n    const { re, groups } = routeRegex;\n    return (pathname) => {\n        const routeMatch = re.exec(pathname);\n        if (!routeMatch) {\n            return false;\n        }\n        const params = {};\n        Object.keys(groups).forEach((slugName) => {\n            const m = routeMatch[groups[slugName]];\n            if (m !== undefined) {\n                params[slugName] = decodeURIComponent(m);\n            }\n        });\n        return params;\n    };\n}\nexports.getRouteMatcher = getRouteMatcher;\n"]},"metadata":{},"sourceType":"script"}