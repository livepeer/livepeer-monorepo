{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime-corejs2/helpers/slicedToArray\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction rewriteUrlForNextExport(url) {\n  var _url$split = url.split('#'),\n      _url$split2 = _slicedToArray(_url$split, 2),\n      pathname = _url$split2[0],\n      hash = _url$split2[1]; // tslint:disable-next-line\n\n\n  var _pathname$split = pathname.split('?'),\n      _pathname$split2 = _slicedToArray(_pathname$split, 2),\n      path = _pathname$split2[0],\n      qs = _pathname$split2[1];\n\n  path = path.replace(/\\/$/, ''); // Append a trailing slash if this path does not have an extension\n\n  if (!/\\.[^/]+\\/?$/.test(path)) path += \"/\";\n  if (qs) path += '?' + qs;\n  if (hash) path += '#' + hash;\n  return path;\n}\n\nexports.rewriteUrlForNextExport = rewriteUrlForNextExport;","map":{"version":3,"sources":["/Users/adamsoffer/Workspace/livepeerjs/node_modules/next-server/dist/lib/router/rewrite-url-for-export.js"],"names":["exports","value","rewriteUrlForNextExport","url","split","pathname","hash","path","qs","replace","test"],"mappings":"AAAA;;;;;;AACA,uBAAsBA,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAA,mBACTA,GAAG,CAACC,KAAJ,CAAU,GAAV,CADS;AAAA;AAAA,MAC3BC,QAD2B;AAAA,MACjBC,IADiB,mBAElC;;;AAFkC,wBAGjBD,QAAQ,CAACD,KAAT,CAAe,GAAf,CAHiB;AAAA;AAAA,MAG7BG,IAH6B;AAAA,MAGvBC,EAHuB;;AAIlCD,EAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP,CAJkC,CAKlC;;AACA,MAAI,CAAC,cAAcC,IAAd,CAAmBH,IAAnB,CAAL,EACIA,IAAI,OAAJ;AACJ,MAAIC,EAAJ,EACID,IAAI,IAAI,MAAMC,EAAd;AACJ,MAAIF,IAAJ,EACIC,IAAI,IAAI,MAAMD,IAAd;AACJ,SAAOC,IAAP;AACH;;AACDP,OAAO,CAACE,uBAAR,GAAkCA,uBAAlC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction rewriteUrlForNextExport(url) {\n    const [pathname, hash] = url.split('#');\n    // tslint:disable-next-line\n    let [path, qs] = pathname.split('?');\n    path = path.replace(/\\/$/, '');\n    // Append a trailing slash if this path does not have an extension\n    if (!/\\.[^/]+\\/?$/.test(path))\n        path += `/`;\n    if (qs)\n        path += '?' + qs;\n    if (hash)\n        path += '#' + hash;\n    return path;\n}\nexports.rewriteUrlForNextExport = rewriteUrlForNextExport;\n"]},"metadata":{},"sourceType":"script"}